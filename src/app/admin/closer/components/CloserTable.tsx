"use client";

import { Button, Input, message, Popconfirm, PopconfirmProps, TableProps, Tag } from "antd";
import { useState, useMemo } from "react";
import DataTable from "@/utils/DataTable";
import { CgUnblock } from "react-icons/cg";
import { ArrowDownNarrowWide, Download, Eye, PlusCircle, Search } from "lucide-react";
import AddCloserForm from "./AddCloserForm";
import Link from "next/link";
import { useGetAllClosersQuery } from "@/redux/api/closerApi";
import { TCloser, TUser } from "@/types";
import dayjs from "dayjs";
import { useDebounced } from "@/redux/hooks";
import { useAllUserQuery, useUpdateUserStatusMutation } from "@/redux/api/userApi";
import Image from "next/image";
import moment from "moment";
import { Error_Modal, Success_model } from "@/lib/utils";

const CloserTable = () => {
  const [page, setPage] = useState(1);
  const [pageSize, setPageSize] = useState(11);
  const [search, setSearch] = useState("");

  const searchTerm = useDebounced({ value: search, delay: 300 });

  const [updateUser, { isLoading: isUpdateLoading }] = useUpdateUserStatusMutation();

  // Pass pagination params to the query
  const { data: cData, isLoading } = useAllUserQuery([
    {
      label: "page",
      value: page.toString(),
    },
    {
      label: "limit",
      value: pageSize.toString(),
    },
    {
      label: "searchTerm",
      value: typeof searchTerm === "string" ? searchTerm : searchTerm.toString(),
    },
  ]);

  const closerData = (cData?.data || []) as TUser[];
  const totalItems = cData?.meta?.total;
  console.log(closerData, "closerData");
  const confirmBlock = async (user: TUser) => {
    try {
      const res = await updateUser({
        id: user.id,
        data: {
          isActive: !user.isActive,
        },
      }).unwrap();
      Success_model({ title: res?.message });
    } catch (err: any) {
      Error_Modal({ title: err?.data?.message });
    }
  };

  const handleExport = () => {
    const jsonString = JSON.stringify(closerData, null, 2);
    const blob = new Blob([jsonString], { type: "application/json" });
    const url = URL.createObjectURL(blob);

    const a = document.createElement("a");
    a.href = url;
    a.download = `closers_${new Date().toISOString()}.json`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);

    URL.revokeObjectURL(url);
  };

  const columns: TableProps<TUser>["columns"] = [
    {
      title: "Serial",
      dataIndex: "serial",
      //align: "center",
      render: (text, record, index) => <p>#{++index}</p>,
    },
    {
      title: "User Name",
      dataIndex: "name",
      //align: "center",
      render: (_, record) => {
        return (
          <div className='flex flex-col'>
            <div className='flex items-center gap-x-1'>
              <>
                <Image
                  src={record?.profilePicture ?? "/user-profile.png"}
                  alt='profile-picture'
                  width={40}
                  height={40}
                  className='size-10 object-cover rounded-full'
                ></Image>
                <p>{record?.name}</p>
              </>
            </div>
            <div className='flex flex-wrap gap-1 mt-1'>
              {record?.myAchievements.map((item) => (
                <div className='mt-1 px-2 py-0.5 text-xs rounded-sm bg-[#FCB806]/20 text-[#FCB806] flex items-center'>
                  <svg
                    width='16'
                    height='16'
                    viewBox='0 0 16 16'
                    fill='none'
                    xmlns='http://www.w3.org/2000/svg'
                  >
                    <path
                      d='M9.97066 7.34322H6.55735C6.41601 7.34322 6.28045 7.28707 6.18051 7.18712C6.08056 7.08718 6.02441 6.95163 6.02441 6.81028C6.02441 6.66894 6.08056 6.53338 6.18051 6.43344C6.28045 6.33349 6.41601 6.27734 6.55735 6.27734H9.97066C10.112 6.27734 10.2476 6.33349 10.3475 6.43344C10.4475 6.53338 10.5036 6.66894 10.5036 6.81028C10.5036 6.95163 10.4475 7.08718 10.3475 7.18712C10.2476 7.28707 10.112 7.34322 9.97066 7.34322Z'
                      fill='#939598'
                    />
                    <path
                      d='M10.157 6.31152C10.1787 6.36959 10.1912 6.43215 10.1912 6.49784C10.1912 6.63918 10.135 6.77473 10.0351 6.87468C9.93512 6.97462 9.79956 7.03077 9.65822 7.03077H6.24491C6.18126 7.03065 6.11815 7.01909 6.05859 6.99665C6.13422 7.19896 6.32872 7.34327 6.55741 7.34327H9.97072C10.1121 7.34327 10.2476 7.28712 10.3476 7.18718C10.4475 7.08723 10.5037 6.95168 10.5037 6.81034C10.5037 6.58165 10.3593 6.38715 10.157 6.31152Z'
                      fill='#808285'
                    />
                    <path
                      d='M12.0137 1.2417H4.51367V4.67014C4.51366 4.77899 4.54208 4.88595 4.59613 4.98044C4.65017 5.07493 4.72796 5.15365 4.8218 5.20882L6.63867 6.27757H9.88867L11.7055 5.20882C11.7994 5.15363 11.8771 5.0749 11.9312 4.98042C11.9852 4.88594 12.0137 4.77898 12.0137 4.67014V1.2417Z'
                      fill='#A54AF4'
                    />
                    <path
                      d='M4.88867 4.25832C4.85552 4.25832 4.82373 4.24515 4.80028 4.22171C4.77684 4.19827 4.76367 4.16648 4.76367 4.13332V2.13332C4.76367 2.10017 4.77684 2.06838 4.80028 2.04494C4.82373 2.02149 4.85552 2.00832 4.88867 2.00832C4.92182 2.00832 4.95362 2.02149 4.97706 2.04494C5.0005 2.06838 5.01367 2.10017 5.01367 2.13332V4.13332C5.01367 4.16648 5.0005 4.19827 4.97706 4.22171C4.95362 4.24515 4.92182 4.25832 4.88867 4.25832ZM4.88867 1.75832C4.85552 1.75832 4.82373 1.74515 4.80028 1.72171C4.77684 1.69827 4.76367 1.66648 4.76367 1.63332V1.6167C4.76367 1.58355 4.77684 1.55175 4.80028 1.52831C4.82373 1.50487 4.85552 1.4917 4.88867 1.4917C4.92182 1.4917 4.95362 1.50487 4.97706 1.52831C5.0005 1.55175 5.01367 1.58355 5.01367 1.6167V1.63332C5.01367 1.66648 5.0005 1.69827 4.97706 1.72171C4.95362 1.74515 4.92182 1.75832 4.88867 1.75832Z'
                      fill='#B171F4'
                    />
                    <path
                      d='M11.3892 1.2417V4.04514C11.3892 4.15399 11.3608 4.26095 11.3068 4.35544C11.2527 4.44993 11.1749 4.52865 11.0811 4.58382L9.26423 5.65257H6.01423L4.52441 4.7762C4.53966 4.86563 4.57421 4.95066 4.62566 5.02538C4.67712 5.10009 4.74424 5.16269 4.82235 5.20882L6.63923 6.27757H9.88923L11.7061 5.20882C11.7999 5.15363 11.8777 5.0749 11.9317 4.98042C11.9858 4.88594 12.0142 4.77898 12.0142 4.67014V1.2417H11.3892Z'
                      fill='#893ADD'
                    />
                    <path
                      d='M11.701 1.2417V4.35764C11.701 4.46649 11.6726 4.57345 11.6185 4.66794C11.5645 4.76243 11.4867 4.84115 11.3929 4.89632L9.57599 5.96507H6.32599L4.57324 4.93407C4.62629 5.04868 4.71288 5.14449 4.82155 5.20882L6.63843 6.27757H9.88843L11.7053 5.20882C11.7991 5.15363 11.8769 5.0749 11.9309 4.98042C11.985 4.88594 12.0134 4.77898 12.0134 4.67014V1.2417H11.701Z'
                      fill='#6C2BC1'
                    />
                    <path
                      d='M12.4126 1.24168H4.11473C4.00505 1.24168 3.89986 1.1981 3.8223 1.12055C3.74474 1.04299 3.70117 0.937797 3.70117 0.828113C3.70117 0.71843 3.74474 0.613238 3.8223 0.53568C3.89986 0.458122 4.00505 0.414551 4.11473 0.414551H12.4126C12.5223 0.414551 12.6275 0.458122 12.705 0.53568C12.7826 0.613238 12.8262 0.71843 12.8262 0.828113C12.8262 0.937797 12.7826 1.04299 12.705 1.12055C12.6275 1.1981 12.5223 1.24168 12.4126 1.24168Z'
                      fill='#939598'
                    />
                    <path
                      d='M12.6354 0.47998C12.6782 0.546441 12.701 0.623843 12.701 0.702918C12.701 0.812602 12.6574 0.917793 12.5798 0.995351C12.5023 1.07291 12.3971 1.11648 12.2874 1.11648H3.98954C3.91046 1.11652 3.83305 1.09373 3.7666 1.05086C3.80393 1.10928 3.85538 1.15737 3.91618 1.19068C3.97699 1.224 4.0452 1.24147 4.11454 1.24148H12.4125C12.5222 1.24148 12.6274 1.19791 12.7049 1.12035C12.7825 1.04279 12.826 0.937602 12.826 0.827918C12.826 0.75858 12.8085 0.690365 12.7752 0.629559C12.7419 0.568754 12.6938 0.517314 12.6354 0.47998Z'
                      fill='#808285'
                    />
                    <path d='M7.01367 1.2417H9.51367V6.27757H7.01367V1.2417Z' fill='#F1F2F2' />
                    <path d='M7.01367 5.96484H9.51367V6.27734H7.01367V5.96484Z' fill='#E6E7E8' />
                    <path
                      d='M12.0137 13.1563V9.54787C12.0137 9.43816 11.9848 9.33038 11.9299 9.23537C11.8751 9.14036 11.7962 9.06147 11.7012 9.00662L8.57617 7.20237C8.48116 7.14752 8.37338 7.11865 8.26367 7.11865C8.15396 7.11865 8.04619 7.14752 7.95117 7.20237L4.82617 9.00662C4.73116 9.06147 4.65227 9.14037 4.59741 9.23538C4.54256 9.33038 4.51367 9.43816 4.51367 9.54787V13.1563C4.51367 13.266 4.54255 13.3738 4.5974 13.4688C4.65226 13.5638 4.73116 13.6427 4.82617 13.6976L7.95117 15.5018C8.04619 15.5566 8.15396 15.5855 8.26367 15.5855C8.37338 15.5855 8.48116 15.5566 8.57617 15.5018L11.7012 13.6976C11.7962 13.6427 11.8751 13.5638 11.9299 13.4688C11.9848 13.3738 12.0137 13.266 12.0137 13.1563Z'
                      fill='#FFC91D'
                    />
                    <path
                      d='M11.7015 9.00642L11.6422 8.97217C11.68 9.05342 11.7015 9.14254 11.7015 9.23517V12.8436C11.7015 12.9533 11.6726 13.0611 11.6178 13.1561C11.5629 13.2511 11.484 13.33 11.389 13.3849L8.26399 15.189C8.16898 15.2439 8.0612 15.2728 7.95149 15.2728C7.84178 15.2728 7.73401 15.2439 7.63899 15.189L4.57324 13.419C4.627 13.5357 4.71544 13.6328 4.82649 13.6973L7.95149 15.5015C8.04651 15.5563 8.15428 15.5852 8.26399 15.5852C8.3737 15.5852 8.48148 15.5563 8.57649 15.5015L11.7015 13.6973C11.7965 13.6424 11.8754 13.5635 11.9303 13.4685C11.9851 13.3735 12.014 13.2658 12.014 13.156V9.54761C12.014 9.43791 11.9851 9.33014 11.9303 9.23514C11.8754 9.14014 11.7965 9.06126 11.7015 9.00642Z'
                      fill='#FFA91A'
                    />
                    <path
                      d='M11.1482 12.6569V10.0477C11.1482 9.93798 11.1193 9.83021 11.0644 9.7352C11.0096 9.64018 10.9307 9.56129 10.8357 9.50644L8.57603 8.20188C8.48102 8.14704 8.37324 8.11816 8.26353 8.11816C8.15382 8.11816 8.04605 8.14704 7.95103 8.20188L5.69141 9.50644C5.5964 9.56129 5.5175 9.64019 5.46264 9.7352C5.40779 9.83021 5.37891 9.93798 5.37891 10.0477V12.6569C5.3789 12.7666 5.40778 12.8744 5.46264 12.9694C5.51749 13.0644 5.59639 13.1433 5.69141 13.1981L7.95103 14.5027C8.04605 14.5575 8.15382 14.5864 8.26353 14.5864C8.37324 14.5864 8.48102 14.5575 8.57603 14.5027L10.8357 13.1981C10.9307 13.1433 11.0096 13.0644 11.0644 12.9694C11.1193 12.8744 11.1482 12.7666 11.1482 12.6569Z'
                      fill='#F79219'
                    />
                    <path
                      d='M10.836 9.50642L10.7767 9.47217C10.8145 9.55342 10.836 9.64254 10.836 9.73517V12.3444C10.836 12.4541 10.8071 12.5618 10.7522 12.6569C10.6974 12.7519 10.6185 12.8308 10.5235 12.8856L8.26385 14.1902C8.16884 14.245 8.06106 14.2739 7.95135 14.2739C7.84164 14.2739 7.73387 14.245 7.63885 14.1902L5.43848 12.9198C5.49223 13.0364 5.58067 13.1336 5.69173 13.198L7.95135 14.5026C8.04637 14.5574 8.15414 14.5863 8.26385 14.5863C8.37356 14.5863 8.48134 14.5574 8.57635 14.5026L10.836 13.198C10.931 13.1432 11.0099 13.0643 11.0647 12.9693C11.1196 12.8743 11.1485 12.7665 11.1485 12.6568V10.0476C11.1485 9.93791 11.1196 9.83014 11.0647 9.73514C11.0099 9.64014 10.931 9.56126 10.836 9.50642Z'
                      fill='#EF7816'
                    />
                    <path
                      d='M8.3829 9.6484L8.7634 10.8194H9.99471C10.1158 10.8194 10.1661 10.9743 10.0682 11.0455L9.07208 11.7693L9.45258 12.9403C9.49002 13.0555 9.35821 13.1512 9.26021 13.08L8.26408 12.3563L7.26796 13.08C7.17002 13.1512 7.03821 13.0555 7.07558 12.9403L7.45608 11.7693L6.45996 11.0455C6.36202 10.9743 6.41233 10.8194 6.53346 10.8194H7.76471L8.14521 9.6484C8.18252 9.53321 8.34546 9.53321 8.3829 9.6484Z'
                      fill='white'
                    />
                    <path
                      d='M3.0122 11.5914L3.05207 11.7771C3.0726 11.8727 3.12028 11.9602 3.18939 12.0293C3.25849 12.0985 3.34608 12.1461 3.44163 12.1667L3.62738 12.2065C3.6722 12.2162 3.6722 12.28 3.62738 12.2897L3.44163 12.3295C3.34608 12.3501 3.25849 12.3978 3.18939 12.4669C3.12028 12.536 3.0726 12.6236 3.05207 12.7191L3.0122 12.9049C3.00257 12.9497 2.9387 12.9497 2.92907 12.9049L2.8892 12.7191C2.86866 12.6236 2.82098 12.536 2.75188 12.4669C2.68277 12.3978 2.59518 12.3501 2.49963 12.3295L2.31388 12.2897C2.26907 12.28 2.26907 12.2162 2.31388 12.2065L2.49963 12.1667C2.59518 12.1461 2.68277 12.0985 2.75188 12.0293C2.82098 11.9602 2.86866 11.8727 2.8892 11.7771L2.92907 11.5914C2.9387 11.5466 3.00257 11.5466 3.0122 11.5914ZM3.81051 13.4837L3.86895 13.7559C3.89901 13.8959 3.96888 14.0243 4.07014 14.1255C4.1714 14.2268 4.29975 14.2967 4.43976 14.3267L4.71195 14.3852C4.77757 14.3992 4.77757 14.4929 4.71195 14.507L4.43976 14.5654C4.29975 14.5955 4.1714 14.6653 4.07014 14.7666C3.96888 14.8679 3.89901 14.9962 3.86895 15.1362L3.81051 15.4084C3.79645 15.474 3.70276 15.474 3.6887 15.4084L3.63026 15.1362C3.60019 14.9962 3.53033 14.8679 3.42907 14.7666C3.32781 14.6653 3.19946 14.5955 3.05945 14.5654L2.78726 14.507C2.72163 14.4929 2.72163 14.3992 2.78726 14.3852L3.05945 14.3267C3.19946 14.2967 3.32781 14.2268 3.42907 14.1255C3.53033 14.0243 3.60019 13.8959 3.63026 13.7559L3.6887 13.4837C3.70276 13.4181 3.79645 13.4181 3.81051 13.4837ZM12.8944 7.52654L12.9451 7.76267C12.9712 7.88411 13.0318 7.99543 13.1196 8.08327C13.2074 8.1711 13.3188 8.2317 13.4402 8.25779L13.6763 8.30848C13.7333 8.32073 13.7333 8.40192 13.6763 8.41417L13.4402 8.46486C13.3188 8.49095 13.2074 8.55155 13.1196 8.63938C13.0318 8.72721 12.9712 8.83854 12.9451 8.95998L12.8944 9.19611C12.8821 9.25304 12.8009 9.25304 12.7887 9.19611L12.738 8.95998C12.7119 8.83854 12.6513 8.72721 12.5635 8.63938C12.4756 8.55155 12.3643 8.49095 12.2429 8.46486L12.0068 8.41417C11.9498 8.40192 11.9498 8.32073 12.0068 8.30848L12.2429 8.25779C12.3643 8.2317 12.4756 8.1711 12.5635 8.08327C12.6513 7.99543 12.7119 7.88411 12.738 7.76267L12.7887 7.52654C12.8009 7.46967 12.8821 7.46967 12.8944 7.52654Z'
                      fill='#FFC91D'
                    />
                  </svg>
                  <p>{item?.achievement?.name}</p>
                </div>
              ))}
            </div>
          </div>
        );
      },
    },
    {
      title: "Email",
      dataIndex: "email",
      //align: "center",
    },

    {
      title: " Date",
      dataIndex: "createdAt",
      //align: "center",
      render: (text) => <p>{moment(text).format("LL")}</p>,
    },

    {
      title: "Action",
      dataIndex: "action",
      //align: "center",
      render: (text, record) => (
        <div className='flex justify-start gap-2'>
          <Link href={`/admin/closer/${record.id}`}>
            <Eye size={22} color='#78C0A8' className='cursor-pointer' />
          </Link>
          <Popconfirm
            title='Block the user'
            description={`Are you sure to ${record?.isActive ? "block" : "unblock"} this user?`}
            onConfirm={() => confirmBlock(record)}
            okText='Yes'
            cancelText='No'
          >
            <CgUnblock
              size={22}
              color={record.isActive ? "red" : "green"}
              className='cursor-pointer'
            />
          </Popconfirm>
        </div>
      ),
    },
  ];

  return (
    <div className='rounded-md'>
      <div className='flex justify-between items-center px-3 py-5 gap-3 sm:gap-5'>
        <Input
          className='lg:w-full !py-2 placeholder:!text-white !bg-transparent !text-white !border-[#f4dede]'
          placeholder='Search here...'
          prefix={<Search size={16} color='#fff' />}
          value={search}
          onChange={(e) => setSearch(e.target.value)}
        />
        <div className='flex gap-2'>
          {/*<Button
            className='!border-none !h-[40px] !text-base !bg-[#78C0A8] !text-white'
            onClick={() => setAddCloserModal(true)}
          >
            <PlusCircle size={18} /> Add Closer
          </Button>*/}
          <Button
            className='!bg-[#FCB806] !text-black !font-semibold !py-3 !h-12'
            icon={<Download size={18} />}
            onClick={handleExport}
          >
            Export
          </Button>
        </div>
      </div>

      <DataTable
        columns={columns}
        data={closerData?.length > 0 ? closerData : []}
        pageSize={pageSize}
        total={totalItems}
        currentPage={page}
        loading={isLoading}
        onPageChange={(newPage, newSize) => {
          setPage(newPage);
          setPageSize(newSize);
        }}
      />

      {/*<AddCloserForm open={addCloserModal} setOpen={setAddCloserModal} />*/}
    </div>
  );
};

export default CloserTable;
